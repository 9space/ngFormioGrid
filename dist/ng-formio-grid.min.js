!function e(n,i,o){function t(a,l){if(!i[a]){if(!n[a]){var s="function"==typeof require&&require;if(!l&&s)return s(a,!0);if(r)return r(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=i[a]={exports:{}};n[a][0].call(c.exports,function(e){var i=n[a][1][e];return t(i?i:e)},c,c.exports,e,n,i,o)}return i[a].exports}for(var r="function"==typeof require&&require,a=0;a<o.length;a++)t(o[a]);return t}({1:[function(e,n,i){"use strict";angular.module("ngFormioGrid",["formio","ngSanitize","ui.grid","ui.grid.pagination","angular-bind-html-compile"]).directive("formioGrid",function(){return{restrict:"E",replace:!0,scope:{src:"=",query:"=?",columns:"=?",buttons:"=?",gridOptions:"=?"},template:'<div><div ui-grid="gridOptions" ui-grid-pagination class="grid"></div></div>',controller:["Formio","formioComponents","FormioUtils","$scope","uiGridConstants",function(e,n,i,o,t){var r=null,a=angular.merge({pageNumber:1,pageSize:25,sort:null},o.gridOptions);o.buttons=o.buttons||[{id:"view",key:"view",event:"rowView",label:"",width:35,icon:"glyphicon glyphicon-share-alt"}],angular.isUndefined(o.query)&&(o.query={});var l=function(){r&&o.gridOptions.columnDefs.length&&(a.pageSize&&(o.query.limit=a.pageSize),a.pageNumber&&(o.query.skip=(a.pageNumber-1)*a.pageSize),o.query.sort=a.sort,r.loadSubmissions({params:o.query}).then(function(e){o.gridOptions.totalItems=e.serverCount,o.gridOptions.data=e}))};o.gridOptions={paginationPageSizes:[25,50,75],paginationPageSize:a.pageSize,useExternalPagination:!0,useExternalSorting:!0,columnDefs:[],data:[],onRegisterApi:function(e){o.gridApi=e,e.pagination.on.paginationChanged(o,function(e,n){a.pageNumber=e,a.pageSize=n,l()}),e.core.on.sortChanged(o,function(e,n){if(0===n.length)a.sort=null;else switch(n[0].sort.direction){case t.ASC:a.sort=n[0].colDef.field;break;case t.DESC:a.sort="-"+n[0].colDef.field;break;case void 0:a.sort=null}l()})}},o.buttonClick=function(e,n){o.$emit(e,n)};var s=function(){o.src&&(r=new e(o.src),r.loadForm().then(function(e){var n={},t=1;o.gridOptions.columnDefs=[],o.buttons.forEach(function(e){var i=e["class"]||"btn btn-sm btn-default";n[e.label]=!0,o.gridOptions.columnDefs.push({name:e.label,field:e.key,width:e.width,cellTemplate:'<a class="'+i+'" ng-click="grid.appScope.buttonClick(\''+e.event+'\', row.entity)"><span class="'+e.icon+'" aria-hidden="true"></span>'+e.label+"</a>"})});var r=function(e){for(var i=e.label||e.key;n.hasOwnProperty(i);)i=e.label+t++;n[i]=!0,o.gridOptions.columnDefs.push({component:e,name:i,field:"data."+e.key,cellTemplate:'<div class="ui-grid-cell-contents" bind-html-compile="COL_FIELD | tableFieldView:this.col.colDef.component"></div>'})};if(o.columns&&o.columns.length>0){var a=i.flattenComponents(e.components);o.columns.forEach(function(e){a.hasOwnProperty(e)&&r(a[e])})}else i.eachComponent(e.components,function(e){e.input&&e.tableView&&e.key&&r(e)});l()}))};o.$on("reloadGrid",function(e,n,i){n&&(o.src=n),i&&(o.query=i),s()}),s()}]}})},{}]},{},[1]);